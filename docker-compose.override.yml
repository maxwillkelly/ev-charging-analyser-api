version: '3.7'

services:
  api:
    env_file:
      - ./config/development.env
    networks:
      - api-cassandra
      - api-postgres
    depends_on:
      - cassandra
      - postgres
  cassandra:
    image: cassandra:4.0
    environment:
      CASSANDRA_CONTACT_POINT: ${CASSANDRA_CONTACT_POINT}
      CASSANDRA_LOCAL_DATA_CENTER: ${CASSANDRA_LOCAL_DATA_CENTER}
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE}
      CASSANDRA_USER: ${CASSANDRA_USER}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD}
    ports:
      - 9042:9042
    volumes:
      - cassandra:/var/lib/cassandra
    networks:
      - api-cassandra
    healthcheck:
      test:
        [
          "CMD",
          "cqlsh",
          "-u ${CASSANDRA_USER}",
          "-p ${CASSANDRA_PASSWORD}",
          "-k ${CASSANDRA_KEYSPACE}"
        ]
      interval: 5s
      timeout: 10s
      retries: 6
  postgres:
    image: postgres:14.1-alpine
    env_file:
      - ./config/development.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - api-postgres
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d \"${POSTGRES_DB}\"",
          "-U ${POSTGRES_USER}"
        ]
      timeout: 45s
      interval: 10s
      retries: 10

networks:
  api-cassandra:
    driver: bridge
  api-postgres: null
volumes:
  cassandra: null
  pgdata: null
